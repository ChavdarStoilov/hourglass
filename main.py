import time
import os

def clearing():
    return os.system('cls')


def print_board():
    for boarder in board:
        print("".join(boarder))


def load_clock():
    rows = -1

    for row in range(len(board) -1):
        for col in range(len(board) - 1):
            if board[row][col] == "*" and row < 8:
                board[row][col] = " "
                board[rows][col] = "*"


                clearing()
                print_board()
                time.sleep(0.20)
        rows -= 1
        
        

def start_clock(number):
    for row in range(len(board)):
        for col in range(len(board)):
            if row + number == 6 + number and col == 7 and row + number < len(board) -2:
                board[row + number][col] = "*"


def current_places():

    for row in range(len(board)):
        for col in range(len(board)):
            print(board[row][col])


board = [
    [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" ","-","-","-","-","-","-","-","-","-","-","-","-","-"," "],
    [" ","\\","*","*","*","*","*","*","*","*","*","*","*","/"," "],
    [" "," ","\\","*","*","*","*","*","*","*","*","*","/"," "," "],
    [" "," "," ","\\","*","*","*","*","*","*","*","/"," "," "," "],
    [" "," "," "," ","\\","*","*","*","*","*","/"," "," "," "," "],
    [" "," "," "," "," ","\\","*","*","*","/",""," "," "," "," "],
    [" "," "," "," "," "," ","\\","*","/",""," "," "," "," "," "],
    [" "," "," "," "," "," ","/"," ","\\"," "," "," "," "," "," "],
    [" "," "," "," "," ","/"," "," "," ","\\"," "," "," "," "," "],
    [" "," "," "," ","/"," "," "," "," "," ","\\"," "," "," "," "],
    [" "," "," ","/"," "," "," "," "," "," "," ","\\"," "," "," "],
    [" "," ","/"," "," "," "," "," "," "," "," "," ","\\"," "," "],
    [" ","/"," "," "," "," "," "," "," "," "," "," "," ","\\"," "],
    [" ","-","-","-","-","-","-","-","-","-","-","-","-","-"," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "]


]

rotated_borader = [
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']

]


# a = current_places()
# print(current_places())

# new_row = 0
# new_col = 14
# for row in range(len(rotated_borader)):
#     for col in range(len(rotated_borader) -2, -1, -1):
#         rotated_borader[row][col] = str(current_places())


# print(rotated_borader)

# 
number = 1

while True:

    time.sleep(0.40)
    clearing()

    print_board()

    if board[-3][7] != "*":
        start_clock(number)
    else:
        load_clock()
    
#     if test == -8:
#         row = 1
#         col = 0
#         # TODO : Create functionallity for rotete the clock
#         for row in range(len(board)):
#             for col in range(len(board) -1):
#                 board[row][col] = " "

    print_board()
        

    number += 1
